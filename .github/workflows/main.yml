name: scan the jar file

on:
  workflow_dispatch:
    inputs:
      jar_name:
        type: string
        description: 'Enter name of the Jar:'
        required: true
      git_email:
        type: string
        description: 'Enter value of git.email:'
        required: true
      git_username:
        type: string
        description: 'Enter value of git.username:'
        required: true

jobs: 
  run-shell-command:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the Repository
        uses: actions/checkout@v2
      - name: Uploading the artifact
        uses: actions/upload-artifact@v2      
        with:
          name: artifacts
          path: |
            **/${{ inputs.jar_name }}.jar
  publish-on-atrifactory:
    runs-on: ubuntu-latest
    needs: run-shell-command
    steps:
      - name: Downloading the artifact
        uses: actions/download-artifact@v2
        with:
          name: artifacts
      - run: |
          curl -uhelpcoin@outlook.com:Hotmail@123 -T ./${{ inputs.jar_name }}.jar "https://helpcoin.jfrog.io/artifactory/example-repo-local/${{ inputs.jar_name }}.jar"
  remove-jar-repo:
    runs-on: ubuntu-latest
    needs: publish-on-atrifactory
    steps:
      - name: Clean jar file from Repository
        run:
          rm -f ${{ inputs.jar_name }}.jar
      - name: Clean jar file from Repository
        run:
          git config --global user.email "${{ inputs.git_email }}"
          git config --global user.name "${{ inputs.git_username }}"
          git add .
          git commit -m "Clean Jar file from Repo"
          git push  
